// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApplication;
using WebApplication.Models;

namespace WebApplication.Migrations
{
    [DbContext(typeof(BosqueContext))]
    [Migration("20180503185319_BosqueProtector")]
    partial class BosqueProtector
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Alerta", b =>
                {
                    b.Property<int>("AlertaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algoritmo");

                    b.Property<int>("AudioId");

                    b.Property<bool>("Clasificado");

                    b.Property<bool>("Estado");

                    b.Property<string>("Tipo");

                    b.HasKey("AlertaId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("WebApplication.AlertaConfiguracion", b =>
                {
                    b.Property<int>("AlertaConfiguracionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Correo");

                    b.Property<string>("Frecuencia");

                    b.Property<int>("Repeticiones");

                    b.HasKey("AlertaConfiguracionId");

                    b.ToTable("AlertasConfiguracion");
                });

            modelBuilder.Entity("WebApplication.Audio", b =>
                {
                    b.Property<int>("AudioId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BitRate");

                    b.Property<int>("DispositivoId");

                    b.Property<string>("Duracion");

                    b.Property<string>("FechaGrabacion");

                    b.Property<string>("FechaLlegada");

                    b.Property<string>("Formato");

                    b.HasKey("AudioId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("WebApplication.Dispositivo", b =>
                {
                    b.Property<int>("DispositivoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<string>("VersionAndroid");

                    b.Property<string>("VersionServicios");

                    b.HasKey("DispositivoId");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("WebApplication.Etiqueta", b =>
                {
                    b.Property<int>("EtiquetaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AudioId");

                    b.Property<string>("Descripcion");

                    b.Property<string>("TiempoFin");

                    b.Property<string>("TiempoInicio");

                    b.HasKey("EtiquetaId");

                    b.HasIndex("AudioId");

                    b.ToTable("Etiquetas");
                });

            modelBuilder.Entity("WebApplication.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Funcion");

                    b.Property<string>("Nombre");

                    b.HasKey("SensorId");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("WebApplication.Etiqueta", b =>
                {
                    b.HasOne("WebApplication.Audio")
                        .WithMany("EtiquetasList")
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
